{"pages":[{"title":"About","permalink":"https://anotherme17.github.io/about/index.html","text":"引言欢迎来到我的个人技术博客。本人主修Android、Java，刚开始学习前端的知识，所以如果本网站有什么不足的地方请见谅。我的联系方式会在后面给出，欢迎大家给我指出问题，交流技术。 目前博客还没有评论功能，计划在下个版本引入。 个人简介我叫李仁豪，是一个梦想成为海贼王的男人٩(๑^o^๑)۶…… 跑偏了，其实我只是一只安静的程序猿，梦想成为架构师那样神奇的存在，也一直朝着这个方向努力✧٩(ˊωˋ*)و✧ 喜欢学习新的知识和各种黑科技，爱折腾，感觉自己是一名假极客。有轻微的代码洁癖症(。•ˇˍˇ•。) 虽然别人对我的第一印象是内向，但其实我真的不是。我只是不太喜欢说话而已，如果我真的说起话（开起车）来我自己都怕，所以认识我的人都说我很“闷骚”(இωஇ )，其实这是个褒义词，不信去查百度←_← 最喜欢周星驰，是星爷的铁杆粉，也是最崇拜星爷的人(*๓´╰╯`๓)♡ 开源项目闲着无聊，写了几个开源的项目，有兴趣的朋友可以一起加入。 CommonAdapterRecyclerview和ListView的通用适配器，一行代码实现加载。可以添加各种动画效果、头和尾、空布局等等。详情见Github 传送门 兴趣爱好说来惭愧，身为一个程序猿我竟然有这么多爱好，所以我决定把编程放在第一个…… 编程虽然我学习编程只有两三年的时间，但我学习过许多的编程语言，像Java、Android、html、JavaScript、易语言、C等等。但是最熟练精通的还是Android和Java。 我对编程的喜爱就像晓得时候喜欢玩积木一样，发挥自己的想象力，利用现有的一些东西去创造，而编程最迷人的地方就是在创造的过程中。 想象力是没有界限的，同样编程也没有。 羽毛球羽毛球是我从高中开始就喜欢的一项运动，大学的时候还和几个志同道合的朋友组了一个羽毛球社团（原先的社团在我们进大学之前就解散了），还办了几场全校的羽毛球赛。我的羽毛球水平只能算中等，因为体力不太行，节奏一快时间一长就会累的跟狗一样…… LoL不多说，黄金以上水平。老司机，熟悉召唤师峡谷的各种套路，能熟练套路与反套路。 影视鉴赏说白了就是看电影…… 最喜欢的电影就是肖申克的救赎和阿甘正传，几乎每年都会刷一遍（为什么国产剧不能拍出这种水平，星爷的大话西游除外）。 旅游喜欢去不同的地方旅游，看各种不同的风景……浙江的山基本都被我爬遍了 专业技能Android ★★★★★Android应该是我学习时间最长的一门编程语言，从大二开始到现在也有两年多了。平时主要是自学为主，常常去简书、csdn、github等网站上学习新的干货。在我的github上也造过很多轮子，现在正在造CommonAdapter GitHub传送门 除此之外还熟练使用过很多第三方的开源库阅读过其源码，例如 RxJava1,2 RxAndroid GreenDao ButterKnife Dagger2 xUtils OkHttp Retrofit OkHttpHtils MVC、MVP等设计模式 SlidingMenu ViewPagerIndicator PullToRefresh CircleImageView EventBus smartimagevie Picasso ImageLoad Glide PhotoView Crab Bugly LeakCanary Material Design AutoLayout 等等 Android技能点 ★★★★★熟悉java基础语言以及面向对象的编程思想。 ★★★★★对Android屏幕适配有独特见解，熟悉Android常见的几种屏幕适配方式。 ★★★★★熟练使用常见的设计模式（单例模式、工厂模式、装饰者模式、适配器模式） ★★★★★熟悉Android下网络通信技术，对Socket通信、TCP/IP、Http及Https有一定的了解 ★★★★★熟悉Android 5.0/ 6.0 新特性及Design兼容包使用, 例如 RecyclerView/CardView/CoordinatorLayout联动/ripple动画/SelectorAnimation动画等; ★★★★★熟练掌握常用的第三方开源项目：SlidingMenu、ViewPagerIndicator、PullToRefresh、CircleImageView、PhotoView、Butterknife、smartimageview等。 ★★★☆☆熟悉Apk的优化、瘦身、打包、加固、增量更新。 ★★★★☆熟悉Android动画机制，并能够根据需求实现对应动画特效 ★★★★★熟练使用MVP架构，并对MVVM架构有一定的了解，熟练使用MVC、MVP设计思想来进行项目的快速开发，达到高内聚、低耦合的开发目的。 ★★★★☆能够对项目进行多方面的性能优化，例如：UI、内存、数据库、电量、流量 ★★★★★了解RxJava + Retrofit +okhttp的使用 ★★☆☆☆了解Android 的JNI 开发，通过JNI实现JAVA与C/C++程序间的调用及回调。了解Android 的JNI/NDK 开发，通过JNI实现JAVA与C/C++程序间的调用及回调。 ★★☆☆☆了解Android和html5的混合开发,以及JS,CSS语言 ★★★★★掌握常见的数据存储方式，了解MySql、SqlServer，了解常见数据库开源框架（GreenDao、LitePal、OrmLite） ★★☆☆☆对Android系统启动流程、消息发送机制、事件分发机制、IPC机制有深刻的理解 ★★★★☆熟练使用WorldMap、Glide、Fresco等框架对图片的处理，包括大图片、超大图片的处理，避免OOM异常的发生，并了解其特性及原理。 ★★★★★有独立开发经验，有项目管理经验。 ★★★☆☆了解常见的算法和数据结构，例如：堆、栈、链表、二叉树、图 ★★☆☆☆有电商、LBS、社交、资讯等项目的开发经验。 ★★☆☆☆熟悉WebView的常用用法，并了解WebView的安全问题 ★★★☆☆对蓝牙、wifi、NFC的开发有一定了解，适用于智能硬件的开发 ★★☆☆☆了解React-Native ★☆☆☆☆熟悉直播开发，了解音视频技术 ★☆☆☆☆熟悉AIDL技术以及Messager方式实现跨进程间的数据通信。 ★★★☆☆一年JavaEE（或者其他语言）开发经验 ★★☆☆☆对Dalvik 虚拟机、ART和Linux 命令有一定了解 ★★☆☆☆熟悉使用DataBinding数据绑定框架 ★☆☆☆☆熟练掌握插件式开发，能够解决项目因第三方引用过多的65535的异常。（可作为项目技能点） ★☆☆☆☆了解C，C++，C#语言，能够在Java编程当中更好的辅助开发。 ★★☆☆☆熟悉安卓传感器相关开发，例如计算步数、测方位 ★★★☆☆熟悉静默安装 ★★★★☆熟练使用AccessibilityService实现抢红包技术 ★★★★★RxVolley，让 Volley 支持了 RxJava 后，让你的代码很轻松的脱离了回调地狱。同时移除掉了复杂的 HttpClient ，以及可选支持 OkHttp 与 ImageLoader，让你使用自己习惯编码风格的同时极大缩减了项目体积。 ★★☆☆☆熟悉Jenkins自动打包 ★★★★☆熟悉Android TV 端开发 ★★★★★熟练使用代码质量检测工具FindBugs和内存泄漏检测工具 LeakCanary，更好的修正代码质量。 ★★☆☆☆了解微信小程序开发 ★★★★☆使用studio工具Template模板减少重复代码编写，节约时间（常用工具） ★★★★☆对常见的开源框架有源码层的理解 ★★☆☆☆了解App常见测试方法，例如：功能测试，性能测试，压力测试，等测试 ★★★☆☆擅长基础框架的设计搭建，并可以设计图片加载框架，网络框架 ★☆☆☆☆熟悉基于Xmpp通信协议的IM（即时通信）开发，和第三方IM的开发SDK（融云SDK等） ★★★☆☆熟悉Android系统下的广播（耳机的插拔，网络状态变化等）的相关功能开发。 ★☆☆☆☆对Android hook技术有一定了解 ★★★★★熟悉多线程下载与断点续传 ★★★★☆了解双进程守护，避免APP被杀死 ★★★☆☆熟悉长连接实现原理 ★★★★☆熟悉H5开发，能够单独开发Android当中的H5界面。 ★★★★★有SDK开发经验，独立封装过网络框架SDK，在Github上有开源源代码。 ★☆☆☆☆了解过Cocos2d游戏引擎 - C++ ★★☆☆☆熟练使用UML设计，例如：用例图、类图、活动图等 ★★★★★了解JavaWeb编程技术,对服务端原理有一定认知 ★★★★★精通Android四大组件:Activity、BroadcastReceiver、Service、ContentProvider间进程通信 ★★★★☆对Android底层有一定的认识，研究过相关的Android源码。 ★★☆☆☆熟悉安卓技术中的视频播放开发技术（videoview，MediaPlayer ，Vitamo，VLC） ★★★★☆熟悉界面间的数据传递（intent和EventBus3.0等等），进程间通信(AIDL,文件共享等等） ★★★★★良好的开发习惯，一心追求流畅顺滑的UI体验，对代码有洁癖. ★★★☆☆熟悉Android组件化和插件化开发，App与插件化无缝结合 ★★★☆☆了解Android进程安全、线程安全、Https等安全机制。 ★★★☆☆了解Android逆向开发 ★★★★★通过了CET4并能够读懂英文技术文献，Google官方文档 Java ★★★★★熟悉面向对象的编程思想，对虚拟机有一定的了解。 会使用Java编写后台，很久没学了，技术还停留在SSH框架（Strust Spring Hibernate）。 大三的时候参加全国移动互联网创新大赛，后台就是用SSH框架写的，包括服务器都是自己搭的（顺便说一句，主办方提供的天翼服务器真烂……）。Android端也是我写的，时间只有一个月，差点没把我写死…… 除此之外还帮宁波丝绸之路研究院写了一个答题竞赛的后台，一等奖是欧洲游，我真应该去参加的…… 服务器 ★★★☆☆会搭建Tomcat服务器，踩过安装搭建服务器时遇到的各种坑…… 还会使用hexo+github搭建博客，这个博客就是搭建在GitHub上的。 数据库 ★★★☆☆能熟练使用数据操作的各种命令（增删改查），用的最多的是MySql和sqlite 其它数据库没怎么用过。 Html ★★★☆☆我的Html是半桶水，学后台时顺便学的…… 不过用Html5和CSS写一些不是很复杂的页面还是没问题的。别人写的Html页面能看懂并修改。 曾经用WebMagic写过一个爬虫，爬取知乎上的问题和答案。 JavaScrip★★★☆☆个人感觉和Java有些类似，所以用JavaScrip实现一些功能也没有问题，如瀑布流布局等等…… CSS★★★☆☆会使用CSS对界面进行美化，添加动画效果等等。对响应式布局有一定了解…… C ★☆☆☆☆只在大一的时候学过基本的C语言…… 易语言★★☆☆☆大一暑假无聊学的，唯一吸引我的地方是这是一款中文的语言。不是特别精通，只写过一个聊天机器人的demo"}],"posts":[{"title":"Adnroid 干货收藏","permalink":"https://anotherme17.github.io/2017/05/08/Android收藏/","text":"收集了一些工作和学习中遇到的一些好的Android第三方库和文章.持续更新中:trollface: Activity ActivityLifecycleCallbacks 代替BaseActivity AnimationGithub Material-Animations FragmentGithub Fragmentation 为”单Activity ＋ 多Fragment”,”多模块Activity + 多Fragment”架构而生 Gradle文章 依赖,管理依赖的版本 UIFlycoSystemBar状态栏 BGARefreshLayout-Android上拉刷新下拉加载框架 MagicIndicatorViewPager Indicator 算法文章 利用递归算法、堆栈打造一个android可擦除思维导图 框架Github MVPArmsMVP框架 ARouter 阿里的路由跳转框架"},{"title":"AndroidStudio发布项目到JCenter","permalink":"https://anotherme17.github.io/2017/02/24/AndroidStudio发布一个项目到Jcenter/","text":"本文将介绍如何把你写的包发布到Bintray上 注册账号和生成Maven库的步骤省略，过程比较简单可以自行上网百度 主项目的gradle的配置上传的插件用的是 com.novoda:bintray-release:0.3.4 如果项目中包含中文注释或中文字符，最好添加以下代码，不然中文注释的地方会报错导致编译不能通过。 tasks.withType(Javadoc) { options.addStringOption(&apos;Xdoclint:none&apos;, &apos;-quiet&apos;) options.addStringOption(&apos;encoding&apos;, &apos;UTF-8&apos;) } Gradle整体配置 123456789101112131415161718192021buildscript &#123; repositories &#123; jcenter() &#125; dependencies &#123; classpath 'com.android.tools.build:gradle:2.1.0' classpath 'com.novoda:bintray-release:0.3.4' &#125;&#125;allprojects &#123; repositories &#123; jcenter() &#125; tasks.withType(Javadoc) &#123; options.addStringOption('Xdoclint:none', '-quiet') options.addStringOption('encoding', 'UTF-8') &#125;&#125;task clean(type: Delete) &#123; delete rootProject.buildDir&#125; Module的Gradle配置添加插件12apply plugin: 'maven'apply plugin: 'com.novoda.bintray-release' 添加注释123456789publish &#123; userOrg = 'anotherme17'//bintray.com用户名 groupId = 'com.anotherme17'//jcenter上的路径 artifactId = 'common-adapter'//项目名称 publishVersion = '0.0.1'//版本号 desc = 'An CommonAdapter for ListView or RecyclerView'//描述，不重要 website = 'https://github.com/anotherMe17/CommonAdapterSample' //网站，不重要；尽量模拟github上的地址，例如我这样的；当然你有地址最好了&#125; 执行 上传最后在控制台输入以下代码 ./gradlew clean build bintrayUpload -PbintrayUser=xxxxxx -PbintrayKey=xxxxxxxxxxxxxxxxxxxxxx -PdryRun=false PbintrayUser就是用户名，PbintrayKey你的唯一key，PdryRun是一个配置参数，当为true的时候，会运行所有的环节，但是不会上传"},{"title":"Android数据储存-SharedPreferences","permalink":"https://anotherme17.github.io/2017/02/21/SharedPreferences/","text":"获取SharedPreferences获取SharedPreferences有两种方式: 1 调用Context对象的getSharedPreferences()方法2 调用Activity对象的getPreferences()方法 两种方式的区别: 调用Context对象的getSharedPreferences()方法获得的SharedPreferences对象可以被同一应用程序下的其他组件共享. 调用Activity对象的getPreferences()方法获得的SharedPreferences对象只能在该Activity中使用. SharedPreferences的四种操作模式 Context.MODE_PRIVATE：为默认操作模式,代表该文件是私有数据,只能被应用本身访问,在该模式下,写入的内容会覆盖原文件的内容 Context.MODE_APPEND：模式会检查文件是否存在,存在就往文件追加内容,否则就创建新文件. Context.MODE_WORLD_READABLE和Context.MODE_WORLD_WRITEABLE用来控制其他应用是否有权限读写该文件. MODE_WORLD_READABLE：表示当前文件可以被其他应用读取. MODE_WORLD_WRITEABLE：表示当前文件可以被其他应用写入."},{"title":"AndroidStudio模板","permalink":"https://anotherme17.github.io/2017/02/21/AndroidStudio模板/","text":"为了方便实用，AndroidStudio可以自定义实用模板。模板分为两种，一种是Live Template，另一种是File Template Live Template这种模板用法就是输入特定字符，按下Tab键即可 Live Template示例在方法中输入“Toast”并按下Tab键 对一个对象的判空/非空语句写法 自定义Live TemplateSettings &gt; Editor &gt; Live Templates 进入Live Template 设置界面 创建一个自定义的Live Template File TemplateFile Template是在创建类时用到的模板，包括类的注释 如图 举个栗子这里举个AndroidStudio自带的饿汉单例例子 #if (${PACKAGE_NAME} &amp;&amp; ${PACKAGE_NAME} != &quot;&quot;)package ${PACKAGE_NAME};#end #parse(&quot;File Header.java&quot;) public class ${NAME}{ private static ${NAME} ourInstance = new ${NAME}(); public static ${NAME} getInstance() { return ourInstance; } private ${NAME}() { } } 使用自己创建的模板在创建类时可以选择自己新建的模板"},{"title":"Tools","permalink":"https://anotherme17.github.io/2017/02/16/Tools/","text":"图片相关工具处理图片相关的工具网站 png转icoicovert可以把png格式的图片转换成ico,有16,32,48,64,96,128,256,512,八种尺寸"}]}