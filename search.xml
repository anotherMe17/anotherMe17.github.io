<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[Adnroid 干货收藏]]></title>
      <url>https://anotherme17.github.io/2017/05/08/Android%E6%94%B6%E8%97%8F/</url>
      <content type="html"><![CDATA[<p>收集了一些工作和学习中遇到的一些好的Android第三方库和文章.<br>持续更新中:trollface:</p>
<a id="more"></a>
<h2 id="Activity"><a href="#Activity" class="headerlink" title="Activity"></a>Activity</h2><ul>
<li><a href="https://juejin.im/post/590f09ec128fe100584ee6b0" target="_blank" rel="external">ActivityLifecycleCallbacks</a> 代替BaseActivity</li>
</ul>
<h2 id="Animation"><a href="#Animation" class="headerlink" title="Animation"></a>Animation</h2><p>Github</p>
<ul>
<li><a href="https://github.com/lgvalle/Material-Animations" target="_blank" rel="external">Material-Animations</a></li>
</ul>
<h2 id="Fragment"><a href="#Fragment" class="headerlink" title="Fragment"></a>Fragment</h2><p>Github</p>
<ul>
<li><a href="https://github.com/YoKeyword/Fragmentation" target="_blank" rel="external">Fragmentation </a>为”单Activity ＋ 多Fragment”,”多模块Activity + 多Fragment”架构而生</li>
</ul>
<h2 id="Gradle"><a href="#Gradle" class="headerlink" title="Gradle"></a>Gradle</h2><p>文章</p>
<ul>
<li><a href="http://blog.csdn.net/pkaq_/article/details/53906668" target="_blank" rel="external">依赖,管理依赖的版本</a> </li>
</ul>
<h2 id="ViewPager-Indicator"><a href="#ViewPager-Indicator" class="headerlink" title="ViewPager Indicator"></a>ViewPager Indicator</h2><p>Github</p>
<ul>
<li><a href="https://github.com/hackware1993/MagicIndicator" target="_blank" rel="external">MagicIndicator</a></li>
</ul>
<h2 id="路由跳转框架"><a href="#路由跳转框架" class="headerlink" title="路由跳转框架"></a>路由跳转框架</h2><p>Github</p>
<ul>
<li><a href="https://github.com/alibaba/ARouter" target="_blank" rel="external">ARouter</a> 阿里的路由跳转框架</li>
</ul>
<h2 id="上拉刷新-下拉加载"><a href="#上拉刷新-下拉加载" class="headerlink" title="上拉刷新,下拉加载"></a>上拉刷新,下拉加载</h2><p>Github</p>
<ul>
<li><a href="https://github.com/bingoogolapple/BGARefreshLayout-Android" target="_blank" rel="external">BGARefreshLayout-Android</a></li>
</ul>
<h2 id="算法"><a href="#算法" class="headerlink" title="算法"></a>算法</h2><p>文章</p>
<ul>
<li><a href="https://juejin.im/post/590ec7beda2f600053556598" target="_blank" rel="external">利用递归算法、堆栈打造一个android可擦除思维导图</a></li>
</ul>
<h2 id="框架"><a href="#框架" class="headerlink" title="框架"></a>框架</h2><p>Github</p>
<ul>
<li><a href="https://github.com/JessYanCoding/MVPArms" target="_blank" rel="external">MVPArms</a></li>
</ul>
<h2 id="状态栏"><a href="#状态栏" class="headerlink" title="状态栏"></a>状态栏</h2><p>Github</p>
<ul>
<li><a href="https://github.com/H07000223/FlycoSystemBar" target="_blank" rel="external">FlycoSystemBar</a></li>
</ul>
]]></content>
      
        <categories>
            
            <category> 收藏 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Android </tag>
            
            <tag> 收藏 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[AndroidStudio发布项目到JCenter]]></title>
      <url>https://anotherme17.github.io/2017/02/24/AndroidStudio%E5%8F%91%E5%B8%83%E4%B8%80%E4%B8%AA%E9%A1%B9%E7%9B%AE%E5%88%B0Jcenter/</url>
      <content type="html"><![CDATA[<p>本文将介绍如何把你写的包发布到<a href="https://bintray.com/" target="_blank" rel="external">Bintray</a>上  </p>
<p>注册账号和生成Maven库的步骤省略，过程比较简单可以自行上网百度</p>
<h2 id="主项目的gradle的配置"><a href="#主项目的gradle的配置" class="headerlink" title="主项目的gradle的配置"></a>主项目的gradle的配置</h2><p>上传的插件用的是 com.novoda:bintray-release:0.3.4 </p>
<a id="more"></a>
<p>如果项目中包含中文注释或中文字符，最好添加以下代码，不然中文注释的地方会报错导致编译不能通过。  </p>
<pre><code>tasks.withType(Javadoc) {
    options.addStringOption(&apos;Xdoclint:none&apos;, &apos;-quiet&apos;)
    options.addStringOption(&apos;encoding&apos;, &apos;UTF-8&apos;)
}
</code></pre><p>Gradle整体配置</p>
<!-- more -->
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">buildscript &#123;</div><div class="line">    repositories &#123;</div><div class="line">        jcenter()</div><div class="line">    &#125;</div><div class="line">    dependencies &#123;</div><div class="line">        classpath <span class="string">'com.android.tools.build:gradle:2.1.0'</span></div><div class="line">        classpath <span class="string">'com.novoda:bintray-release:0.3.4'</span></div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line">allprojects &#123;</div><div class="line">    repositories &#123;</div><div class="line">        jcenter()</div><div class="line">    &#125;</div><div class="line">    tasks.withType(Javadoc) &#123;</div><div class="line">        options.addStringOption(<span class="string">'Xdoclint:none'</span>, <span class="string">'-quiet'</span>)</div><div class="line">        options.addStringOption(<span class="string">'encoding'</span>, <span class="string">'UTF-8'</span>)</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"><span class="function">task <span class="title">clean</span><span class="params">(type: Delete)</span> </span>&#123;</div><div class="line">    delete rootProject.buildDir</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="Module的Gradle配置"><a href="#Module的Gradle配置" class="headerlink" title="Module的Gradle配置"></a>Module的Gradle配置</h2><h3 id="添加插件"><a href="#添加插件" class="headerlink" title="添加插件"></a>添加插件</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">apply plugin: <span class="string">'maven'</span></div><div class="line">apply plugin: <span class="string">'com.novoda.bintray-release'</span></div></pre></td></tr></table></figure>
<h3 id="添加注释"><a href="#添加注释" class="headerlink" title="添加注释"></a>添加注释</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">publish &#123;</div><div class="line">    userOrg = <span class="string">'anotherme17'</span><span class="comment">//bintray.com用户名</span></div><div class="line">    groupId = <span class="string">'com.anotherme17'</span><span class="comment">//jcenter上的路径</span></div><div class="line">    artifactId = <span class="string">'common-adapter'</span><span class="comment">//项目名称</span></div><div class="line">    publishVersion = <span class="string">'0.0.1'</span><span class="comment">//版本号</span></div><div class="line">    desc = <span class="string">'An CommonAdapter for ListView or RecyclerView'</span><span class="comment">//描述，不重要</span></div><div class="line">    website = <span class="string">'https://github.com/anotherMe17/CommonAdapterSample'</span></div><div class="line">    <span class="comment">//网站，不重要；尽量模拟github上的地址，例如我这样的；当然你有地址最好了</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="执行-上传"><a href="#执行-上传" class="headerlink" title="执行 上传"></a>执行 上传</h2><p>最后在控制台输入以下代码</p>
<blockquote>
<p>./gradlew clean build bintrayUpload<br> -PbintrayUser=xxxxxx<br> -PbintrayKey=xxxxxxxxxxxxxxxxxxxxxx<br> -PdryRun=false  </p>
</blockquote>
<p>PbintrayUser就是用户名，<br>PbintrayKey你的唯一key，<br>PdryRun是一个配置参数，当为true的时候，会运行所有的环节，但是不会上传</p>
]]></content>
      
        <categories>
            
            <category> AndroidStudio实用技巧 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> AndroidStudio </tag>
            
            <tag> 实用技巧 </tag>
            
            <tag> JCenter </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Android数据储存-SharedPreferences]]></title>
      <url>https://anotherme17.github.io/2017/02/21/SharedPreferences/</url>
      <content type="html"><![CDATA[<h2 id="获取SharedPreferences"><a href="#获取SharedPreferences" class="headerlink" title="获取SharedPreferences"></a>获取SharedPreferences</h2><p>获取SharedPreferences有两种方式:</p>
<p>1 调用Context对象的getSharedPreferences()方法<br>2 调用Activity对象的getPreferences()方法</p>
<p>两种方式的区别:</p>
<p>调用Context对象的getSharedPreferences()方法获得的SharedPreferences对象可以被同一应用程序下的其他组件共享.</p>
<p>调用Activity对象的getPreferences()方法获得的SharedPreferences对象只能在该Activity中使用.</p>
<a id="more"></a>
<h2 id="SharedPreferences的四种操作模式"><a href="#SharedPreferences的四种操作模式" class="headerlink" title="SharedPreferences的四种操作模式"></a>SharedPreferences的四种操作模式</h2><ul>
<li>Context.MODE_PRIVATE：为默认操作模式,代表该文件是私有数据,只能被应用本身访问,在该模式下,写入的内容会覆盖原文件的内容</li>
<li>Context.MODE_APPEND：模式会检查文件是否存在,存在就往文件追加内容,否则就创建新文件.</li>
<li>Context.MODE_WORLD_READABLE和Context.MODE_WORLD_WRITEABLE用来控制其他应用是否有权限读写该文件.</li>
<li>MODE_WORLD_READABLE：表示当前文件可以被其他应用读取.</li>
<li>MODE_WORLD_WRITEABLE：表示当前文件可以被其他应用写入.</li>
</ul>
]]></content>
      
        <categories>
            
            <category> Android </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Android </tag>
            
            <tag> Android数据储存 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[AndroidStudio模板]]></title>
      <url>https://anotherme17.github.io/2017/02/21/AndroidStudio%E6%A8%A1%E6%9D%BF/</url>
      <content type="html"><![CDATA[<p>为了方便实用，AndroidStudio可以自定义实用模板。模板分为两种，一种是<strong>Live Template</strong>，另一种是<strong>File Template</strong></p>
<h2 id="Live-Template"><a href="#Live-Template" class="headerlink" title="Live Template"></a>Live Template</h2><p>这种模板用法就是输入特定字符，按下Tab键即可</p>
<h3 id="Live-Template示例"><a href="#Live-Template示例" class="headerlink" title="Live Template示例"></a>Live Template示例</h3><p>在方法中输入“Toast”并按下Tab键</p>
<p><img src="http://img.blog.csdn.net/20160429132644449" alt=""></p>
<p>对一个对象的判空/非空语句写法</p>
<p><img src="http://img.blog.csdn.net/20160429102024730" alt=""></p>
<a id="more"></a>
<h3 id="自定义Live-Template"><a href="#自定义Live-Template" class="headerlink" title="自定义Live Template"></a>自定义Live Template</h3><p>Settings &gt; Editor &gt; Live Templates 进入<strong>Live Template</strong> 设置界面</p>
<p><img src="http://img.blog.csdn.net/20160429102100735" alt=""></p>
<p>创建一个自定义的Live Template</p>
<p><img src="http://img.blog.csdn.net/20160429102118231" alt=""></p>
<h2 id="File-Template"><a href="#File-Template" class="headerlink" title="File Template"></a>File Template</h2><p>File Template是在创建类时用到的模板，包括类的注释</p>
<p>如图 <img src="http://img.blog.csdn.net/20160429102138435" alt=""></p>
<h3 id="举个栗子"><a href="#举个栗子" class="headerlink" title="举个栗子"></a>举个栗子</h3><p>这里举个AndroidStudio自带的饿汉单例例子</p>
<pre><code>#if (${PACKAGE_NAME} &amp;&amp; ${PACKAGE_NAME} != &quot;&quot;)package ${PACKAGE_NAME};#end
#parse(&quot;File Header.java&quot;)
public class ${NAME}{
private static ${NAME} ourInstance = new ${NAME}();

public static ${NAME} getInstance() {
return ourInstance;
}

private ${NAME}() {
}
}
</code></pre><h3 id="使用自己创建的模板"><a href="#使用自己创建的模板" class="headerlink" title="使用自己创建的模板"></a>使用自己创建的模板</h3><p>在创建类时可以选择自己新建的模板</p>
<p><img src="http://img.blog.csdn.net/20160429102237517" alt=""></p>
]]></content>
      
        <categories>
            
            <category> AndroidStudio实用技巧 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> AndroidStudio </tag>
            
            <tag> 实用技巧 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Tools]]></title>
      <url>https://anotherme17.github.io/2017/02/16/Tools/</url>
      <content type="html"><![CDATA[<h2 id="图片相关工具"><a href="#图片相关工具" class="headerlink" title="图片相关工具"></a>图片相关工具</h2><p>处理图片相关的工具网站</p>
<h3 id="png转ico"><a href="#png转ico" class="headerlink" title="png转ico"></a>png转ico</h3><p><a href="http://www.easyicon.net/covert/" target="_blank" rel="external">icovert</a><br>可以把png格式的图片转换成ico,有16,32,48,64,96,128,256,512,八种尺寸</p>
]]></content>
      
        <categories>
            
            <category> 收藏 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 网站 </tag>
            
            <tag> 工具 </tag>
            
        </tags>
        
    </entry>
    
  
  
</search>
